{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","appMessage","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,IACMQ,EADiBF,KAAKR,MAApBC,WACqB,mCACGO,KAAKR,MAAMC,WADd,KAEzB,0BAEJ,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BD,UAzBrC,GAAyBE,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.01298b3d.chunk.js","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport { Component } from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n    const appMessage = pressedKey\n      ? `The last pressed key is [${this.state.pressedKey}]`\n      : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{appMessage}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}